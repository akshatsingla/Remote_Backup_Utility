Pseudocode for TCP Client

---------------------------------------------------------

INCLUDE HEADER.H

DEFINE PORT 4455
DEFINE SIZE 1000

---------------------Main Function------------------------

BEGIN
DEFINE FILE POINTER *fp

CREATE SOCKET
IF CLIENT<0
    PRINT "ERROR IN CLIENT CREATION"
ELSE
    PRINT "CLIENT IS SUCCESSFULLY CREATED"

CREATE C(connect)
IF C<0
    PRINT "ERROR IN CONNECTING TO SERVER"
ELSE
    PRINT "CONNECTED TO SERVER" 
Do an active connect specifying the IP address and port number of server

GIVE FILENAME TO CLIENT IN COMMAND LINE

//MENU DRIVEN PROGRAM
DEFINE CHOICE
SWITCH (CHOICE):
   CASE 1: send_file(fp,client) and then BREAK
   CASE 2: Increment_Backup(filename,fp,client) and then BREAK
   CASE 3: Scheduled_Backup(filename,fp,client) and then BREAK
   CASE 4: Just_In_time_backup(filename,fp,client) and then BREAK
   CASE 5: RETURN 0

Read and Write data into connect to Communicate with server

Close connect

---------------------Main Function Ends-------------------------

---------------------Function Definitions-----------------------

FUNCTION SEND_FILE
PASS IN: FILE POINTER *fp, INTEGER CLIENT
PASS OUT: NOTHING
SEND FULL BACKUP TO SERVER FOR FILE RECEIVED FROM CLIENT
FUNCTION ENDS


FUNCTION INCREMENT_BACKUP
PASS IN: CHAR* FILENAME, FILE POINTER *fp, INTEGER CLIENT
PASS OUT: NOTHING
DEFINE STRUCT STAT FILESTAT
USE STAT TO EXTRACT THE DATE THE FILE WAS LAST UPDATED
IF DATE OF LAST UPDATED FILE == SYSTEM DATE
     DO FULL BACKUP OF THE FILE
ELSE
     PRINT "Today there is not change in a file so dont need to update"
FUNCTION ENDS


FUNCTION SCHEDULED_BACKUP
PASS IN: CHAR* FILENAME, FILE POINTER *fp, INTEGER CLIENT
PASS OUT: NOTHING
CREATE CONFFILE "../CONF.TXT"
SCHEDULED TIME IS 12:00
DO FULL BACKUP EVERY DAY AT 12:00
FUNCTION ENDS


FUNCTION JUST_IN_TIME_BACKUP
PASS IN: CHAR* FILENAME, FILE POINTER *fp, INTEGER CLIENT
PASS OUT: NOTHING
DEFINE COMMAND POINTER AND RESULT POINTER OF CHAR TYPE
COMPARE (COMMAND, FILE UPDATED IN LAST 60 MINS)
RESULT = SYSTEM(COMMAND)
INFINITE WHILE LOOP
    SEND FOR BACKUP
LOOP ENDS
FUNCTION ENDS